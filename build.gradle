buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
    }
    repositories {
        maven { url 'https://mirrors.huaweicloud.com/repository/maven/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

group = 'com.dyenigma'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven { url 'https://mirrors.huaweicloud.com/repository/maven/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
    mavenCentral()
}


ext {
    lombokVersion = '1.16.20'
    swaggerVerion = '2.8.0'
    fastjsonVersion = '1.2.22'
    apacheLangVersion = '3.4'
    redisSessionVersion = '1.3.2.RELEASE'
    mybatisBootVersion = '1.3.2'
    shiroVersion = '1.4.0'
    druidVersion = '1.1.9'
    pageHelperVersion = '1.2.3'
    guavaVersion = '23.0'
    mybatisMapperVersion = '3.5.3'
    poiVersion = '3.17'
    quartzVersion = '2.3.0'
    elaSearchVersion = '5.6.0'
    log4j2slf4jVersion = '2.8.2'
}

dependencies {
    compile(
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-aop",
            "org.springframework.boot:spring-boot-devtools",
            "org.springframework.boot:spring-boot-starter-data-mongodb",
            "org.springframework.boot:spring-boot-autoconfigure",
            "org.springframework.boot:spring-boot-starter-data-redis",
            "org.springframework.boot:spring-boot-starter-cache",
            "org.springframework.boot:spring-boot-starter-websocket",
            "org.springframework.session:spring-session-data-redis:${redisSessionVersion}",
            "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisBootVersion}",
            "com.github.pagehelper:pagehelper-spring-boot-starter:${pageHelperVersion}",
            "org.apache.logging.log4j:log4j-to-slf4j:${log4j2slf4jVersion}",
            "org.elasticsearch.client:transport:${elaSearchVersion}",
            "org.apache.commons:commons-lang3:${apacheLangVersion}",
            "com.alibaba:druid-spring-boot-starter:${druidVersion}",
            "org.elasticsearch:elasticsearch:${elaSearchVersion}",
            "io.springfox:springfox-swagger-ui:${swaggerVerion}",
            "io.springfox:springfox-swagger2:${swaggerVerion}",
            "org.apache.shiro:shiro-spring:${shiroVersion}",
            "org.quartz-scheduler:quartz:${quartzVersion}",
            "tk.mybatis:mapper:${mybatisMapperVersion}",
            "org.projectlombok:lombok:${lombokVersion}",
            "com.alibaba:fastjson:${fastjsonVersion}",
            "com.google.guava:guava:${guavaVersion}",
            "org.apache.poi:poi:${poiVersion}",
            fileTree(dir: 'lib', include: '*.jar')
    )

    runtime('mysql:mysql-connector-java')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}